<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>cdmlib-parent</artifactId>
    <groupId>eu.etaxonomy</groupId>
    <version>4.3.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <groupId>eu.etaxonomy</groupId>
  <artifactId>cdmlib-remote-webapp</artifactId>  
  <name>CDM Remote Webapp</name>
  <packaging>war</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <scm>
    <connection>
      scm:svn:http://dev.e-taxonomy.eu/svn/trunk/cdmlib/cdmlib-remote/
    </connection>
    <developerConnection>
      scm:svn:https://dev.e-taxonomy.eu/svn/trunk/cdmlib/cdmlib-remote/
    </developerConnection>
    <url>
      http://dev.e-taxonomy.eu/trac/browser/trunk/cdmlib/cdmlib-remote/
    </url>
  </scm>

  <profiles>
    <profile>
      <id>local-repository</id>
      <activation>
        <property>
          <name>localrepo</name>
        </property>
      </activation>
      <repositories>
        <repository>
          <id>EditLocalRepository</id>
          <url>file://${localrepo}/eu/etaxonomy/</url>
          <releases>
            <enabled>false</enabled>
            <updatePolicy>always</updatePolicy>
          </releases>
          <snapshots>
            <enabled>true</enabled>
            <updatePolicy>always</updatePolicy>
          </snapshots>
        </repository>
      </repositories>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>eu.etaxonomy</groupId>
      <artifactId>cdmlib-remote</artifactId>
      <exclusions>
        <!-- 
            exclude all jdbc drivers from the war. 
            Jdbc drivers must only be added to {APPLICATION_CONTAINER}/lib
            see http://dev.e-taxonomy.eu/trac/ticket/4955 
            and http://stackoverflow.com/questions/6981564/why-must-the-jdbc-driver-be-put-in-tomcat-home-lib-folder
         -->
        <exclusion>
            <groupId>eu.etaxonomy</groupId>
            <artifactId>cdmlib-db</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
        <groupId>eu.etaxonomy</groupId>
        <artifactId>cdmlib-test</artifactId>      
        <scope>test</scope>
    </dependency>
    <dependency>
      <!-- TODO this is also offered by cdmlib-remote, can it be removed?
        What does provided mean? -->
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
    </dependency>
    <!-- JsonView -->
    <!-- 
     -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
    </dependency>

    <!-- XmlView 
    -->
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
    </dependency>
    <dependency>
      <groupId>xpp3</groupId>
      <artifactId>xpp3</artifactId>
    </dependency>
    <dependency>
      <groupId>stax</groupId>
      <artifactId>stax</artifactId>
    </dependency>

    <!-- JSP TAG LIBS -->
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>x</artifactId>
      <version>1.1.2</version>
      <type>tld</type>
    </dependency>
    <!-- swagger -->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- 
        dependencies for springfox-swagger2, added explicitly to pin the version
        these dependencies are also required by the cdmlib!  
    -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <!-- END of dependencies for swagger-springmvc, added explicitely -->
    
    <!-- testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Connection Pooling and jdbc -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-c3p0</artifactId>
      <scope>test</scope>
    </dependency>
<!--     <dependency> -->
<!--         <artifactId>c3p0</artifactId> -->
<!--         <groupId>com.mchange</groupId> -->
<!--         <scope>test</scope> -->
<!--     </dependency> -->
      <!-- Profiling -->
      <dependency>
      <groupId>com.yourkit</groupId>
      <artifactId>yjp-controller-api-redist</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <!-- replace the place holders like ${...} in datasources.xml -->
        <filtering>true</filtering>
		<directory>src/test/resources</directory>
        <targetPath>../test-classes</targetPath>
        <includes>
          <include>datasources.xml</include>
        </includes>
      </resource>
      <resource>
        <!-- all other test resources without filtering -->
        <directory>src/test/resources</directory>
        <targetPath>../test-classes</targetPath>
        <excludes>
          <exclude>datasources.xml</exclude>
        </excludes>
      </resource>
      <resource>
        <!-- all main resources without filtering -->
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.16</version>
        <configuration>
          <forkCount>3</forkCount>
          <reuseForks>true</reuseForks>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.3.11.v20160721</version><!-- do not update, since versions later than 9.1.3.v20140225 are no longer compatible to java 7  -->
        <configuration>
          <stopKey>stop</stopKey>
          <stopPort>9199</stopPort>
          <scanIntervalSeconds>10</scanIntervalSeconds>
          <useTestScope>true</useTestScope>
          <jettyXml>${basedir}/src/test/resources/etc/jetty/jetty.xml,${basedir}/src/test/resources/etc/jetty/jetty-http.xml</jettyXml>
          <!-- <jettyXml>./src/test/resources/etc/jetty/jetty.xml,./src/test/resources/etc/jetty/jetty-http.xml,./src/test/resources/etc/jetty/jetty-ssl.xml,./src/test/resources/etc/jetty/jetty-https.xml</jettyXml> -->
          <systemProperties>
            <force>true</force>
            <systemProperty>
              <name>cdm.datasource</name>
              <value>h2_cdmTest</value>
            </systemProperty>
            <systemProperty>
              <!-- 
                The lucene index should be placed into the target folder,
                so user.home needs to be set to this folder.
                user.home needs to be overriden since it already 
                exists, thus the force option is turned on above 
              -->
              <name>user.home</name>
              <value>${basedir}/target/</value>
            </systemProperty>            
            <systemProperty>
              <!-- datasources.xml is prepared by <plugins><resources>..</resources>
                above -->
              <name>cdm.beanDefinitionFile</name>
              <value>${project.build.directory}/test-classes/datasources.xml</value>
            </systemProperty>
            <systemProperty>
                <!--
                    start with swagger profile so that the swagger doc 
                    can be generated 
                 -->
                <name>spring.profiles.active</name>
                <value>swagger</value>
            </systemProperty>
          </systemProperties>
        </configuration>
        <executions>
          <execution>
            <id>start-jetty</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <scanIntervalSeconds>0</scanIntervalSeconds>
              <daemon>true</daemon>
            </configuration>
          </execution>
          <execution>
            <id>stop-jetty</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.6</version>
        <executions>
            <execution>
                <!-- 
                    The war must be created after running the integration-tests,
                    since the SwaggerGroupsIT test populates the classes/api-docs-static/
                    folder with static swagger doc files. The are otherwise not packed
                     into the wae file.
                  -->
                <phase>verify</phase>
                <goals>
                  <goal>war</goal>
                </goals>
            </execution>
        </executions>
      </plugin>
	  <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.7</version>
            <configuration>
                <escapeWindowsPaths>false</escapeWindowsPaths>
            </configuration>
        </plugin>

    </plugins>
  </build>
</project>
