<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="basic-persistence"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:ns5="http://www.w3.org/1999/xhtml"
         xmlns:ns4="http://www.w3.org/2000/svg"
         xmlns:ns3="http://www.w3.org/1998/Math/MathML"
         xmlns:ns2="http://www.w3.org/1999/xlink"
         xmlns:ns="http://docbook.org/ns/docbook">
  <info>
    <title>Basic Persistence</title>
  </info>

  <section>
    <para>The persistence layer of the CDM primarily consists of a set of
    <emphasis>data access objects (DAOs)</emphasis>. These DAOs are generic,
    strongly typed, and form a hierachy that reflects the inheritance of the
    data entities that they provide access too. The root DAO implements
    <interfacename>ICdmEntityDao</interfacename>.</para>

    <table frame="all" xml:id="icdmentitydao-methods">
      <title><interfacename>ICdmEntityDao</interfacename> methods</title>

      <tgroup align="left" cols="2" colsep="1" rowsep="1">
        <colspec colname="c1" />

        <colspec colname="c2" />

        <thead>
          <row>
            <entry>Method</entry>

            <entry>Description</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>
              <methodsynopsis>
                <type>UUID</type>

                <methodname>saveOrUpdate</methodname>

                <methodparam>
                  <type>T</type>

                  <parameter>newOrTransientEntity</parameter>
                </methodparam>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Makes a new object persistent, or persists the state of a
              transient object.</para>
            </entry>
          </row>

          <row>
            <entry>
              <methodsynopsis>
                <type>Map&lt;UUID,T&gt;</type>

                <methodname>save</methodname>

                <methodparam>
                  <type>Collection&lt;T&gt;</type>

                  <parameter>newEntities</parameter>
                </methodparam>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Makes a collection of new objects persistent.</para>
            </entry>
          </row>

          <row>
            <entry>
              <methodsynopsis>
                <type>UUID</type>

                <methodname>save</methodname>

                <methodparam>
                  <type>T</type>

                  <parameter>newEntity</parameter>
                </methodparam>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Makes a new object persistent.</para>
            </entry>
          </row>

          <row>
            <entry>
              <methodsynopsis>
                <type>UUID</type>

                <methodname>update</methodname>

                <methodparam>
                  <type>T</type>

                  <parameter>newEntity</parameter>
                </methodparam>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Makes changes to a transient object persistent.</para>
            </entry>
          </row>

          <row>
            <entry>
              <methodsynopsis>
                <type>UUID</type>

                <methodname>merge</methodname>

                <methodparam>
                  <type>T</type>

                  <parameter>newEntity</parameter>
                </methodparam>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Merges the state of a detached object into the persisted
              version.</para>
            </entry>
          </row>

          <row>
            <entry>
              <methodsynopsis>
                <type>UUID</type>

                <methodname>delete</methodname>

                <methodparam>
                  <type>T</type>

                  <parameter>persistentEntity</parameter>
                </methodparam>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Deletes a persistent object.</para>
            </entry>
          </row>

          <row>
            <entry>
              <methodsynopsis>
                <type>List&lt;T&gt;</type>

                <methodname>list</methodname>

                <methodparam>
                  <type>Class&lt;? extends T&gt;</type>

                  <parameter>clazz</parameter>
                </methodparam>

                <methodparam>
                  <type>Integer</type>

                  <parameter>limit</parameter>
                </methodparam>

                <methodparam>
                  <type>Integer</type>

                  <parameter>start</parameter>
                </methodparam>

                <methodparam>
                  <type>List&lt;OrderHint&gt;</type>

                  <parameter>orderHints</parameter>
                </methodparam>

                <methodparam>
                  <type>List&lt;String&gt;</type>

                  <parameter>propertyPaths</parameter>
                </methodparam>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Returns a (sub-)list of objects matching the type
              <parameter>clazz</parameter>, sorted according to the order
              hints and initialized according to the propertyPaths.</para>
            </entry>
          </row>

          <row>
            <entry>
              <methodsynopsis>
                <type>int</type>

                <methodname>count</methodname>

                <methodparam>
                  <type>Class&lt;? extends T&gt;</type>

                  <parameter>clazz</parameter>
                </methodparam>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Returns a count of objects matching the type
              <parameter>clazz</parameter>.</para>
            </entry>
          </row>

          <row>
            <entry>
              <methodsynopsis>
                <type>T</type>

                <methodname>find</methodname>

                <methodparam>
                  <type>UUID</type>

                  <parameter>uuid</parameter>
                </methodparam>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Returns an object of type T matching the supplied uuid if
              it exists.</para>
            </entry>
          </row>

          <row>
            <entry>
              <methodsynopsis>
                <type>Collection&lt;T&gt;</type>

                <methodname>find</methodname>

                <methodparam>
                  <type>Collection&lt;UUID&gt;</type>

                  <parameter>uuids</parameter>
                </methodparam>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Returns a collection of objects of type T matching the
              uuids supplied, if they exist.</para>
            </entry>
          </row>

          <row>
            <entry>
              <methodsynopsis>
                <type>T</type>

                <methodname>load</methodname>

                <methodparam>
                  <type>UUID</type>

                  <parameter>uuid</parameter>
                </methodparam>

                <methodparam>
                  <type>Collection&lt;String&gt;</type>

                  <parameter>propertyPaths</parameter>
                </methodparam>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Returns an object of type T with properties initialized
              according to the rules described below.</para>
            </entry>
          </row>

          <row>
            <entry>
              <methodsynopsis>
                <type>Set&lt;T&gt;</type>

                <methodname>load</methodname>

                <methodparam>
                  <type>Collection&lt;UUID&gt;</type>

                  <parameter>uuids</parameter>
                </methodparam>

                <methodparam>
                  <type>Collection&lt;String&gt;</type>

                  <parameter>propertyPaths</parameter>
                </methodparam>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Returns a collection of objects of type T matching the
              uuids supplied, if they exist, initialized according to the
              rules described below.</para>
            </entry>
          </row>

          <row>
            <entry>
              <methodsynopsis>
                <type>boolean</type>

                <methodname>exists</methodname>

                <methodparam>
                  <type>UUID</type>

                  <parameter>uuid</parameter>
                </methodparam>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Returns true if there is an object of type T in the
              database matching the supplied uuid.</para>
            </entry>
          </row>

          <row>
            <entry>
              <methodsynopsis>
                <type>Class&lt;T&gt;</type>

                <methodname>getType</methodname>
              </methodsynopsis>
            </entry>

            <entry>
              <para>Returns the class of objects that this DAO provides access
              to.</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <figure>
      <title>An overview of the cdm persistence layer</title>

      <mediaobject>
        <imageobject role="html">
          <imagedata fileref="resources/images/dao.png" format="png" />
        </imageobject>

        <imageobject role="fo">
          <imagedata contentwidth="160mm"
                     fileref="resources/images/dao.png" format="png"
                     scalefit="1" />
        </imageobject>

        <caption>The DAO hierarchy in the CDM persistence layer. Data Access Objects are strongly typed
        and their hierarchy follows the hierarchy of major entities in the CDM.</caption>
      </mediaobject>
    </figure>

    <section>
      <info>
        <title>Object Initialization</title>
      </info>

      <para>DAO methods that return objects, return entities without any
      relationships initialized by default (to learn more about initialization
      of related entities, lazy-loading etc, please consult the hibernate
      documentation). Because some applications (particularly stateless
      multi-user applications with concise units of work i.e. web
      applications), may wish to limit the length of transactions, it is
      important to be able to explicitly initialize related entities according
      to the particular use-case. The CDM library allows application
      developers to do this on a per-method call basis.</para>

      <para>Properties of the root object specified using java-beans-like
      syntax and passed using the <parameter>propertyPaths</parameter>
      parameter will be initialialised before the object(s) are returned and
      can safely used. Applications that access other properties (that are
      part of related entities) outside of the transaction in which the entity
      was retrieved (i.e. the entity is detached) are likely to throw a
      <exceptionname>LazyInitializationException</exceptionname>. In addition
      to specifying properties by name, developers can also use an asterisk
      (*) to represent all *-to-many properties, and a dollar sign ($) to
      represent all *-to-one properties of the root entity or a related
      entity. Using a wildcard terminates the property path (i.e. it is not
      valid syntax to include characters after a wildcard in a propertyPath
      expression - the wildcard must be the final character in the
      string).</para>
    </section>

    <section>
      <info>
        <title>Listing objects and sorting lists</title>
      </info>

      <para>In addition to allowing single objects and collections of objects
      matching specific UUIDs to be returned, the GenericDAO also allows lists
      of objects of type T to be returned (to allow browsing of the entire
      collection of entities, for example). In many cases, applications will
      wish to restrict the total number of objects returned to a subset of the
      total available objects (to reduce resource requirements, or increase
      speed of rendering of a response, for example). This can be achieved by
      supplying non-null <parameter>limit</parameter> and
      <parameter>start</parameter> parameters to restrict the total number of
      objects returned. These parameters are analogous to the "limit" and
      "offset" parameters in SQL and are zero-based (i.e. the first result is
      0, not 1).</para>

      <para>Lists of objects are returned sorted according to the
      <parameter>orderHints</parameter> parameter. Like the
      <parameter>propertyPaths</parameter> parameter,
      <classname>OrderHint</classname> objects take a java-beans-style string
      that indicates the property or related entity that the list of returned
      objects should be ordered by, and a <classname>SortOrder</classname>
      that determined whether the list is sorted in ascending or descending
      order.</para>
    </section>
  </section>
</chapter>
