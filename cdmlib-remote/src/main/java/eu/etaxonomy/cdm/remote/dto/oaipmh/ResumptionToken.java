//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2009.11.02 at 12:58:05 PM GMT
//
package eu.etaxonomy.cdm.remote.dto.oaipmh;

import java.io.Serializable;
import java.math.BigInteger;
import java.util.UUID;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import org.joda.time.DateTime;

import eu.etaxonomy.cdm.api.service.pager.Pager;
import eu.etaxonomy.cdm.jaxb.DateTimeAdapter;

/**
 * A resumptionToken may have 3 optional attributes
 *        and can be used in ListSets, ListIdentifiers, ListRecords
 *        responses.
 *
 * <p>Java class for resumptionTokenType complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="resumptionTokenType">
 *   &lt;simpleContent>
 *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *       &lt;attribute name="expirationDate" type="{http://www.w3.org/2001/XMLSchema}dateTime" />
 *       &lt;attribute name="completeListSize" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" />
 *       &lt;attribute name="cursor" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *     &lt;/extension>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "resumptionTokenType", propOrder = {
    "value"
})
public class ResumptionToken implements Serializable {

    private static final long serialVersionUID = 6381710233899646281L;

    @XmlValue
    protected String value;

    @XmlAttribute
    @XmlJavaTypeAdapter(DateTimeAdapter.class)
    protected DateTime expirationDate;

    @XmlAttribute
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger completeListSize;

    @XmlAttribute
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger cursor;

    @XmlTransient
	private MetadataPrefix metadataPrefix;

    @XmlTransient
	private DateTime from;

    @XmlTransient
	private DateTime until;

    @XmlTransient
	private SetSpec set;

    public ResumptionToken(Pager results, DateTime from,
			DateTime until, MetadataPrefix metadataPrefix, SetSpec set) {
		this.from = from;
		this.until = until;
		this.metadataPrefix = metadataPrefix;
		this.set = set;
		this.value = UUID.randomUUID().toString();
		this.completeListSize = BigInteger.valueOf(results.getCount());
		this.cursor = BigInteger.valueOf(results.getPageSize() * results.getCurrentIndex());
	}

	public ResumptionToken() { }

    public String getValue() {
        return value;
    }

    public void setValue(String value) {
        this.value = value;
    }

    public DateTime getExpirationDate() {
        return expirationDate;
    }

    public void setExpirationDate(DateTime value) {
        this.expirationDate = value;
    }

    public BigInteger getCompleteListSize() {
        return completeListSize;
    }

    public void setCompleteListSize(BigInteger value) {
        this.completeListSize = value;
    }

    public BigInteger getCursor() {
        return cursor;
    }

    public void setCursor(BigInteger value) {
        this.cursor = value;
    }

	public MetadataPrefix getMetadataPrefix() {
		return metadataPrefix;
	}

	public DateTime getFrom() {
		return from;
	}

	public DateTime getUntil() {
		return until;
	}

	public SetSpec getSet() {
		return set;
	}

	public void updateResults(Pager results) {
		this.completeListSize = BigInteger.valueOf(results.getCount());
		this.cursor = BigInteger.valueOf(results.getPageSize() * results.getCurrentIndex());
	}

	public static ResumptionToken emptyResumptionToken() {
		return new ResumptionToken();
	}
}
