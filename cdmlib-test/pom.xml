<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>eu.etaxonomy</groupId>
    <artifactId>cdmlib-parent</artifactId>
    <version>5.44.0</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <artifactId>cdmlib-test</artifactId>
  <name>CDM Integration Tests</name>
  <description>EDIT CDM library integration test layer. Some base classes and resources for CDM Library integration testing</description>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                  <!-- Generate DDL for test -->
                  <!-- Alternatives: https://jpdigital.github.io/hibernate5-ddl-maven-plugin/usage.html, 
                                     https://webdev.jhuep.com/~jcs/ejava-javaee/coursedocs/content/html/jpa-entitymgrex-dbschemagen.html -->
                  <!-- manual execution of the below ant task:  -->
                  <!-- mvn antrun:run@generate-ddl-create       -->
                  <id>generate-ddl-create</id>
                  <phase>process-classes</phase>
                  <goals>
                  <!--    <goal>run</goal>  -->
                  </goals>
                  <configuration>
                      <target>
                          <delete file="${project.build.outputDirectory}/dbscripts/001-cdm.h2.sql" />
                          <!-- copy template file -->
                          <copy file="${basedir}/src/main/resources/dbscripts/001-cdm.h2.template.sql" tofile="${project.build.outputDirectory}/dbscripts/001-cdm.h2.sql" />
                                <!-- for directory shortcuts: https://stackoverflow.com/questions/13354531/maven-project-build-directory   but a short cut to /src/main/resources did not work for me -->
                          <!-- run DdlCreator -->
                          <java classname="eu.etaxonomy.cdm.test.unitils.DdlCreator" fork="false" failonerror="true" classpathref="maven.compile.classpath" /> 
                      </target>
                  </configuration>
              </execution>
          </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.2</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>
    									org.apache.maven.plugins
    								</groupId>
    								<artifactId>
    									maven-antrun-plugin
    								</artifactId>
    								<versionRange>
    									[3.0.0,)
    								</versionRange>
    								<goals>
    									<goal>run</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore />
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
  </build>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.unitils</groupId>
        <artifactId>unitils-core</artifactId>
        <scope>compile</scope>
        <exclusions>
          <exclusion>
            <!-- we use jcl-over-slf4j instead-->
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
    </dependency>
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-database</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-dbmaintainer</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-dbunit</artifactId>
      <scope>compile</scope>
    </dependency>
     <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-easymock</artifactId>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
            <!-- we try to use only cglib-nodep (#9206) -->
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-mock</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-inject</artifactId>
      <scope>compile</scope>
    </dependency>
     <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-orm</artifactId>
      <exclusions>
      	<exclusion>
      		<groupId>javax.persistence</groupId>
	      	<artifactId>persistence-api</artifactId>
      	</exclusion>
      </exclusions>
    </dependency>
     <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-spring</artifactId>
      <scope>compile</scope>
    </dependency>
<!--     <dependency> -->
<!--       <groupId>org.dbunit</groupId> -->
<!--       <artifactId>dbunit</artifactId> -->
<!--       <scope>compile</scope> -->
<!--     </dependency> -->
    <dependency>
		<groupId>xmlunit</groupId>
		<artifactId>xmlunit</artifactId>
        <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.carrotsearch</groupId>
      <artifactId>junit-benchmarks</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- ******* DATABASES DRIVER ******* -->

    <!-- for other databases see also #6025 -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>compile</scope>
    </dependency>
    
    <!-- still creates problems in cdmlib-remote-webapp testing with MySQL connector -->
<!--     <dependency> -->
<!--       <groupId>eu.etaxonomy</groupId> -->
<!--       <artifactId>cdmlib-db</artifactId> -->
<!--       <version>${project.version}</version> -->
<!--       <scope>compile</scope> -->
<!--     </dependency> -->

	<!-- Profiling -->
	<dependency>
		<groupId>com.yourkit</groupId>
		<artifactId>yjp-controller-api-redist</artifactId>
        <scope>compile</scope>
	</dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <exclusions>
        <exclusion>
          <!-- has overlaps with jakarta-activation -->
          <groupId>javax.activation</groupId>
          <artifactId>javax.activation-api</artifactId>
        </exclusion>
        <exclusion>
          <!-- we use jakarta.xml.bind-api instead -->
          <groupId>javax.xml.bind</groupId>
          <artifactId>jaxb-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>eu.etaxonomy</groupId>
      <artifactId>cdmlib-model</artifactId>
    </dependency>
  </dependencies>
  
</project>
